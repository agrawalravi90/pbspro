#!/bin/bash

if [ "x$1" == "xwaitsvr" ]; then
    {
    set -x
    if [ "x$2" != "xdefault" ]; then
        export PBS_CONF_FILE=${2}/confs/pbs-server-$3.conf
        . ${2}/confs/pbs-server-$3.conf
        export PBS_SERVER_INSTANCES=$5
    else
        . /etc/pbs.conf
    fi
    _ct=0
    if [ "x$1" != "xdefault" ]; then
        _svr=$(hostname -s)
    else
        _svr="pbs-server-$3"
    fi
    while true
    do
        /opt/pbs/bin/qstat -Bf &>/dev/null
        if [ $? -eq 0 ]; then
            break
        fi
        sleep 10
        _ct=$(( _ct + 1 ))
        if [ ${_ct} -gt 6 ]; then
            echo "Server ${PBS_SERVER} didn't come up in 60s, exiting"
            exit 1
        fi
    done
    sleep 10
    _moms=$4
    /opt/pbs/bin/pbsnodes -avSj
    # _moms=host1:1@0=4,1=8,2=12,3=16+2@0=6,1=10,2=14_host2:1@4=18,5=22,6=26,7=30+2@3=20,4=24,5=28_....
    # Divide each '_' delimited component
    for _ms in ${_moms//_/ }
    # _ms=host1:1@0=4,1=8,2=12,3=16+2@0=6,1=10,2=14
    # _ms=host2:1@4=18,5=22,6=26,7=30+2@3=20,4=24,5=28
    # ...
    do
        _host=${_ms//:*}
        _ss=${_ms#*:}
        echo "_host: {$_host}"
        echo "_ss: {$_ss}"
        # Divide each '+' delimited component
        for _s in ${_ss//+/ }
        # _s=1@0=4,1=8,2=12,3=16
        # _s=2@0=6,1=10,2=14
        # ...
        do
            _si=${_s//@*}
            if [ "x${_si}" != "x${3}" ]; then
                continue
            fi
            __ms=${_s#*@}
            echo "_si: {$_si}"
            echo "__ms: {$__ms}"

            # Divide each ',' delimited component
            for _m in ${__ms//,/ }
            # _m=0=4
            # _m=1=8
            # ...
            do
                _mi=${_m//=*}
                _ct=0
                while true
                do
                    /opt/pbs/bin/pbsnodes -v pbs-mom-${_si}-${_mi} 2>/dev/null | grep -q 'state = free' &>/dev/null
                    if [ $? -eq 0 ]; then
                        break
                    fi
                    sleep 10
                    _ct=$(( _ct + 1 ))
                    if [ ${_ct} -gt 6 ]; then
                        echo "Mom pbs-mom-${_si}-${_mi} didn't come up in 60s, exiting"
                        exit 1
                    fi
                done
            done
        done
    done
    exit 0
    } 2>&1 > /tmp/waitsvr.log
fi
{
set -x

sed  's/127.0.1.1/#127.0.1.1/g' /etc/hosts > hosts
/bin/cp -f hosts /etc/hosts
/usr/sbin/sshd
sudo -u munge munged

#                 1         2      3              4                          5    6      7       8    9    10       11     12
# for server: <home path> server svrno (1 - start/0 - no start sched/comm) port dbport asyncdb moms cpus vnodes firstsvr svrinsts?
_phome=/var/spool/pbs
if [ "x$1" != "xdefault" ]; then
    _phome=$1
    mkdir -p ${_phome}/confs
fi

chown root: ${_phome}
chmod 0755 ${_phome}

if [ "x$2" == "xserver" -a $# -ge 6 ]; then
    _conf=/etc/pbs.conf
    if [ "x$1" != "xdefault" ]; then
        _conf=${_phome}/confs/pbs-server-$3.conf
    fi
    {
        if [ "x$1" != "xdefault" ]; then
            echo PBS_SERVER=$(hostname -s)
            _svr=$(hostname -s)
        else
	    if [ $3 -eq 1 ]; then
            echo PBS_SERVER=pbs-server-$3
            _svr="pbs-server-$3"
	    else
            echo PBS_SERVER=pbs-server-1
            echo PBS_SERVER_HOST_NAME=pbs-server-$3
            _svr="pbs-server-$3"
	    fi
        fi
        echo PBS_EXEC=/opt/pbs
        echo PBS_HOME=${_phome}/pbs-server-$3
        echo PBS_START_SERVER=1
        echo PBS_START_MOM=0
        echo PBS_START_SCHED=$4
        echo PBS_START_COMM=$4
        echo PBS_SCP=$(which scp)
        echo PBS_SCHED_THREADS=1
        echo PBS_LOG_HIGHRES_TIMESTAMP=1
        echo PBS_CORE_LIMIT=unlimited
        echo PBS_AUTH_METHOD=munge
        echo PBS_SUPPORTED_AUTH_METHODS=munge
        echo PBS_BATCH_SERVICE_PORT=$5
        echo PBS_BATCH_SERVICE_PORT_DIS=$5
        echo PBS_DATA_SERVICE_PORT=$6
        echo PBS_LEAF_ROUTERS=${11}:17001
    } > ${_conf}
    export PBS_CONF_FILE=${_conf}
# for mom: <home path> mom momport ownserver ownserverport name ncpus vnodes firstsvr svrinsts?
elif [ "x$2" == "xmom" -a $# -ge 5 ]; then
    _port=$3
    _conf=/etc/pbs.conf
    if [ "x$1" != "xdefault" ]; then
        _conf=${_phome}/confs/${6}.conf
    fi
    {
        echo PBS_SERVER=$4
        echo PBS_EXEC=/opt/pbs
        echo PBS_HOME=${_phome}/$6
        echo PBS_START_SERVER=0
        echo PBS_START_MOM=1
        echo PBS_START_SCHED=0
        echo PBS_START_COMM=0
        echo PBS_SCP=$(which scp)
        echo PBS_LOG_HIGHRES_TIMESTAMP=1
        echo PBS_CORE_LIMIT=unlimited
        echo PBS_AUTH_METHOD=munge
        echo PBS_BATCH_SERVICE_PORT=$5
        echo PBS_BATCH_SERVICE_PORT_DIS=$5
        echo PBS_MOM_SERVICE_PORT=${_port}
        echo PBS_MANAGER_SERVICE_PORT=$(( _port + 1 ))
        echo PBS_LEAF_ROUTERS=$9:17001
        if [ "x${10}" != "x" ]; then
            echo PBS_SERVER_INSTANCES=${10}
        fi
    } > ${_conf}
    export PBS_CONF_FILE=${_conf}
    export PBS_SERVER=$4
else
    exit 1
fi

/opt/pbs/libexec/pbs_habitat
if [ "x$2" == "xserver" ]; then
    if [ "x${12}" != "x" ]; then
        echo PBS_SERVER_INSTANCES=${12} >> ${_conf}
    fi
    if [ "x$7" == "x1" ]; then
        sed -i 's/#synchronous_commit = on/synchronous_commit = off/g' ${_phome}/pbs-server-${3}/datastore/postgresql.conf
    fi
    /opt/pbs/libexec/pbs_init.d start
    sleep 10
    PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "s sched sched_host = ${11}"
    PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "s sched sched_port = 15004"
    PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c 's s acl_roots = root@*'
    PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "s s flatuid = 1"
    _moms=$8
    _cpus=$9
    _vnodes=${10}
    if [ "x${_moms}" != "xnone" ]; then
    # delete nodes created automatically.
	PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "d n @default"
        for _ms in ${_moms//_/ }
        do
            _host=${_ms//:*}
            _ss=${_ms#*:}
            for _s in ${_ss//+/ }
            do
                _si=${_s//@*}
                if [ "x${_si}" != "x${3}" ]; then
                    continue
                fi
                __ms=${_s#*@}
                for _m in ${__ms//,/ }
                do
                    _mi=${_m//=*}
                    _port=${_m#*=}
                    _port=$(( 18000 + _port ))
                    echo "PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c c n pbs-mom-${_si}-${_mi} MoM=${_host},Port=${_port}"
                    PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "c n pbs-mom-${_si}-${_mi} MoM=${_host},Port=${_port}" &>> /tmp/qmgrout
                    if [ "x${_vnodes}" == "x0" -a "x${_cpus}" != "x0" ]; then
                        PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "s n pbs-mom-${_si}-${_mi} resources_available.ncpus = ${_cpus}" &>> /tmp/qmgrout
                        PBS_SERVER_INSTANCES=${_svr}:$5 /opt/pbs/bin/qmgr -c "l n pbs-mom-${_si}-${_mi}" &>> /tmp/qmgrout
                    fi
                done
            done
        done
    fi
else
    _mom=$6
    _cpu=$7
    _count=$8
    _fname=${_mom}-$(date "+%s")
    if [ "x${_count}" == "x0" ]; then
        {
            echo '$configversion 2'
            echo "${_mom}: resources_available.host=${_mom}"
        } > /tmp/${_fname}
    else
        if [ "x${_cpu}" == "x0" ]; then
            _cpu=$(nproc --all)
        fi
        {
            echo '$configversion 2'
            echo "${_mom}: resources_available.ncpus=0"
            echo "${_mom}: resources_available.mem=0"
            for i in $(seq 1 1 ${_count})
            do
                echo "${_mom}[${i}]: resources_available.ncpus=${_cpu}"
                echo "${_mom}[${i}]: resources_available.host=${_mom}"
            done
        } > /tmp/${_fname}
    fi
    /opt/pbs/sbin/pbs_mom -s remove vnodes
    /opt/pbs/sbin/pbs_mom -s insert vnodes /tmp/${_fname}
    rm -f /tmp/${_fname}
    /opt/pbs/libexec/pbs_init.d start
fi
} 2>&1 >/tmp/my.log
